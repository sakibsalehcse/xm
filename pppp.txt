Plotting a sine curve
close all
clear
clc

freq=input('Freqiuency of Sine function= ');
amp=input('Amplitude of Function= ');
phi=input('Initial Phase of Sine Function= ');
time=input('End Time for Signal= ');

fs=freq*10; %Following nyquist critereon


t=0:1/fs:time;
w=2*pi*freq;
y=amp*sin(w*t+phi);

figure(1)
plot(t,y)
figure(2)
stem(t,y)





Plotting a cosine curve
close all
clear
clc

freq=input('Freqiuency of Cosine function= ');
amp=input('Amplitude of Function= ');
phi=input('Initial Phase of COsine Function= ');
time=input('End Time for Signal= ');

fs=freq*10; %Following nyquist critereon


t=0:1/fs:time;
w=2*pi*freq;
y=amp*cos(w*t+phi);

figure(1)
plot(t,y)
figure(2)
stem(t,y)





Combination of sine and cosine function
close all
clear
clc

fs=1000;
%sine part
f1=2;
phi1=0;
a1=5;

%cosine part
f2=3;
phi2=0;
a2=5;

t=0:1/fs:10;
y1=a1*sin(2*pi*f1*t+phi1);
y2=a2*cos(2*pi*f2*t+phi2);


y=y1-y2;

plot(t,y);







Generating a Unit Step function
close all
clear
clc

fs=10;
a=1;

t=-20:1/fs:20;

y=zeros(1,length(t));
for i=1:length(t)
if t(i)>=0
y(i)=a;
end
end

figure
plot(t,y)
ylim([0 2])
figure
stem(t,y)





Generation of unit Ramp function.
close all
clear
clc

fs=10;
a=1;

t=-5:1/fs:5;

rmp=zeros(1,length(t));
for i=1:length(t)
    if t(i)>=0
        rmp(i)=t(i);
    end
end

figure
plot(t,rmp)
figure
stem(t,rmp)




Generation of unit step and unit ramp function using unit impulse function.
close all
clear
clc

fs=10;
a=1;

t=-5:1/fs:5;

impl=zeros(1,length(t));
for i=1:length(t)
    if t(i)==0
        impl(i)=a;
    end
end

stp=zeros(1,length(t));
for i=0:fs*max(t)
    stp=stp+circshift(impl,[0 i]);
end

rmp=zeros(1,length(t));
for i=0:fs*max(t)
    rmp=rmp+i*circshift(impl,[0 i])/fs;
end

figure;
stem(t,stp);
figure;
stem(t,rmp);






Advanced plotting functionalities.
close all
clear
clc

fs=10;
a=1;

t=-5:1/fs:5;

impl=zeros(1,length(t));
for i=1:length(t)
    if t(i)==0
        impl(i)=a;
    end
end

stp=zeros(1,length(t));
for i=0:fs*max(t)
    stp=stp+circshift(impl,[0 i]);
end

rmp=zeros(1,length(t));
for i=0:fs*max(t)
    rmp=rmp+i*circshift(impl,[0 i])/fs;
end

% figure;
% stem(t,impl);
% figure;
% stem(t,stp);
% figure;
% stem(t,rmp);

figure 
subplot 311  %1st number represents no of Rows. 2nd number represents no of cols and 3rd no represents index of the plot
stem(t,impl);
title('Impulse Signal');
ylabel('Amplitude');
xlabel('Time');
subplot 312
stem(t,stp);
title('Step function');
ylabel('Amplitude');
xlabel('Time');
subplot 313
stem(t,rmp);
title('Ramp function');
ylabel('Amplitude');
xlabel('Time');


figure
plot(t,rmp,'-.R')
figure
plot(t,stp,'--G')







Generating different function using shifting of unit impulse function.
close all
clear
clc

fs=1;
a=1;

t=-5:1/fs:5;

impl=zeros(1,length(t));
for i=1:length(t)
    if t(i)==0
        impl(i)=a;
    end
end

figure;
stem(t,impl);

y=zeros(1,length(t));
y=y+0.5*circshift(impl,[0 -2]);
y=y+2*circshift(impl,[0 -1]);
y=y+circshift(impl,[0 0]);
y=y+2*circshift(impl,[0 1]);
y=y+-1*circshift(impl,[0 2]);

%y=[0 0 0 0.5 2 0 2 -1 0 0 0];

figure
stem(t,y)




Integration and Differentiation in Matlab
%Lab 6 Task 2
close all
clear
clc

syms x t;
f=sin(x)^2;
diff(f)
diff(diff(f))
diff(sin(x),52)
int(sin(x),  -pi, pi)




Symbolic Fourier Transform in Matlab
%Lab 6 Task 3
close all
clear
clc

syms a t w x;
pretty(fourier(exp(-a*t)*heaviside(t)))
pretty(fourier(dirac(t)))
pretty(fourier(fourier(dirac(t))))
pretty(fourier(heaviside(t)))









%Lab 6 Task 1
close all
clear
clc


a=solve('3*x-50=0');
disp(a)

b=solve('3*x^2+5*x-3=0');
pretty(b)

%Using roots function to find the roots of a polynomial
p=[3 5 -3];
roots(p)

%q(x)=5*x^4+3*x^2+5*X+9
q=[5 0 3 5 9];
roots(q)

q=[5 0 5 0 5 3 6 4 5];
roots(q)
polyval(q,3)

%5x^2+3xy+9
pretty(solve('5*x^2+3*x*y+9'))
pretty(solve('5*x^2+3*x*y+9','y'))

%2x+3y+9z=5
%3x-2y+3z=2
%5x+5y+9z=100

solu=solve('2*x+3*y+9*z=5','3*x-2*y+3*z=2','5*x+5*y+9*z=100');
disp(solu.x);
disp(solu.y);
disp(solu.z);

%Expansion, factorization and simplification 
syms x y a b;
expand((x-2)*(x+5))
expand((x-2)^2*(x+5)^2)
pretty(expand((x-2)^2*(x+5)^2))
expand(cos(x+y))
expand(cos(x+y)^2)
expand(exp(a+b)^2)

factor(x^4 + 6*x^3 - 11*x^2 - 60*x + 100)
simplify((x^4 + 6*x^3 - 11*x^2 - 60*x + 100)/(x-2))















Integration and Differentiation in Matlab
%Lab 6 Task 2
close all
clear
clc

syms x t;
f=sin(x)^2;
diff(f)
diff(diff(f))
diff(sin(x),52)
int(sin(x),  -pi, pi)












Symbolic Fourier Transform in Matlab
%Lab 6 Task 3
close all
clear
clc

syms a t w x;
pretty(fourier(exp(-a*t)*heaviside(t)))
pretty(fourier(dirac(t)))
pretty(fourier(fourier(dirac(t))))
pretty(fourier(heaviside(t)))

